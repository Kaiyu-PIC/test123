name: Auto Tag and Release

on:
  push:
    branches:
      - main
      - "feature/*"
  workflow_dispatch:
    inputs:
      branch:
        description: "Select branch to test"
        required: true
        default: "main"

jobs:
  tag_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 確保可以獲取所有 tags

      - name: Fetch All Tags
        run: git fetch --tags

      - name: Get Latest Tag
        id: get_tag
        run: |
          # 取得當前分支
          BRANCH=${{ github.ref_name }}
          
          # 設定初始版本
          case "$BRANCH" in
            "main") BASE_VERSION="1.0";;
            "feature/fun_A") BASE_VERSION="0.1";;
            "feature/fun_B") BASE_VERSION="0.2";;
            *) echo "Branch $BRANCH not handled"; exit 1;;
          esac

          # 找到最近的 tag
          LATEST_TAG=$(git tag --list "v${BASE_VERSION}.*" --sort=-v:refname | head -n 1)

          # 如果沒有 tag，從 v${BASE_VERSION}.0 開始
          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="v${BASE_VERSION}.0"
          else
            # 提取 patch 版本號，+1
            PATCH=$(echo "$LATEST_TAG" | awk -F. '{print $NF}')
            NEW_TAG="v${BASE_VERSION}.$((PATCH + 1))"
          fi

          echo "New tag: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and Push Tag
        run: |
          git tag ${{ env.new_tag }}
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git ${{ env.new_tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.new_tag }}
          name: Release ${{ env.new_tag }}
          draft: false
          prerelease: false
